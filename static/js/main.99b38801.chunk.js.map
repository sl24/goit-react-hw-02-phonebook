{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","shortid","generate","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactList","contacts","length","map","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","contact","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99b38801.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport shortid from 'shortid';\n\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n\n    if (!isValidatedForm) return;\n\n    onAdd({ id: shortid.generate(), name, phone });\n\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n\n    if (!name || !phone) {\n      alert('Some field is empty!');\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, phone, onRemove }) => {\n  return (\n    <li>\n      {name}: {phone} <button onClick={onRemove}>Delete</button>\n    </li>\n  );\n};\n\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(({ id, name, phone }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          phone={phone}\n          onRemove={() => onRemove(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter name for search\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n    ></input>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Form Contact</h2>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}